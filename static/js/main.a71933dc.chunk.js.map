{"version":3,"sources":["components/Counter.js","index.js","reducers/index.js"],"names":["Counter","props","incrementAsync","bind","incrementIfOdd","this","value","onIncrement","setTimeout","onDecrement","onClick","Component","store","createStore","state","action","type","rootEl","document","getElementById","render","ReactDOM","getState","dispatch","subscribe"],"mappings":"sLAwCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAHL,E,kDAMnB,WACME,KAAKJ,MAAMK,MAAQ,IAAM,GAC3BD,KAAKJ,MAAMM,gB,4BAKf,WACEC,WAAWH,KAAKJ,MAAMM,YAAa,O,oBAGrC,WACE,MAA4CF,KAAKJ,MAAzCK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaE,EAA5B,EAA4BA,YAC5B,OACE,2CACaH,EADb,UAC0B,wBAAQI,QAASH,EAAjB,eAAyC,IACjE,wBAAQG,QAASD,EAAjB,eAAyC,IACzC,wBAAQC,QAASL,KAAKD,eAAtB,8BAAgE,IAChE,wBAAQM,QAASL,KAAKH,eAAtB,oC,GAzBcS,aCGhBC,EAAQC,aCNC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACpC,OAAQA,EAAOC,MACb,IAAK,YACH,OAAOF,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,MDAPG,EAASC,SAASC,eAAe,QAEjCC,EAAS,kBAAMC,IAASD,OAC5B,cAAC,EAAD,CACEd,MAAOM,EAAMU,WACbf,YAAa,kBAAMK,EAAMW,SAAS,CAAEP,KAAM,eAC1CP,YAAa,kBAAMG,EAAMW,SAAS,CAAEP,KAAM,iBAE5CC,IAGFG,IACAR,EAAMY,UAAUJ,K","file":"static/js/main.a71933dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementAsync = this.incrementAsync.bind(this);\n    this.incrementIfOdd = this.incrementIfOdd.bind(this);\n  }\n\n  incrementIfOdd() {\n    if (this.props.value % 2 !== 0) {\n      this.props.onIncrement();\n      // asdfasdfsdf\n    }\n  }\n\n  incrementAsync() {\n    setTimeout(this.props.onIncrement, 1000);\n  }\n\n  render() {\n    const { value, onIncrement, onDecrement } = this.props;\n    return (\n      <p>\n        asdfasdf: {value} times <button onClick={onIncrement}>+</button>{\" \"}\n        <button onClick={onDecrement}>-</button>{\" \"}\n        <button onClick={this.incrementIfOdd}>Increment if odd</button>{\" \"}\n        <button onClick={this.incrementAsync}>Increment async</button>\n      </p>\n    );\n  }\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n  onDecrement: PropTypes.func.isRequired\n};\n\nexport default Counter;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport Counter from './components/Counter'\nimport counter from './reducers'\n\nconst store = createStore(counter)\nconst rootEl = document.getElementById('root')\n\nconst render = () => ReactDOM.render(\n  <Counter\n    value={store.getState()}\n    onIncrement={() => store.dispatch({ type: 'INCREMENT' })}\n    onDecrement={() => store.dispatch({ type: 'DECREMENT' })}\n  />,\n  rootEl\n)\n\nrender()\nstore.subscribe(render)\n","export default (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n"],"sourceRoot":""}